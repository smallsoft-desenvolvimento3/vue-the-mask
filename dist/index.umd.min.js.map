{"version":3,"file":"index.umd.min.js","sources":["../src/tokens.js","../src/maskit.js","../src/masker.js","../src/dynamic-mask.js","../src/directive.js","../node_modules/vue-runtime-helpers/dist/normalize-component.mjs","../src/component.vue","../src/index.js"],"sourcesContent":["export default {\n  '#': { pattern: /\\d/ },\n  X: { pattern: /[0-9a-zA-Z]/ },\n  S: { pattern: /[a-zA-Z]/ },\n  A: { pattern: /[a-zA-Z]/, transform: v => v.toLocaleUpperCase() },\n  a: { pattern: /[a-zA-Z]/, transform: v => v.toLocaleLowerCase() },\n  '!': { escape: true }\n}\n\n// https://github.com/fernandofleury/vanilla-masker/blob/master/lib/vanilla-masker.js\n// DIGIT = \"9\",\n// ALPHA = \"A\",\n// ALPHANUM = \"S\"\n\n// https://github.com/niksmr/vue-masked-input\n// 1 - number\n// a - letter\n// A - letter, forced to upper case when entered\n// * - alphanumeric\n// # - alphanumeric, forced to upper case when entered\n// + - any character\n\n// https://github.com/probil/v-mask\n// #\tNumber (0-9)\n// A\tLetter in any case (a-z,A-Z)\n// N\tNumber or letter\n// X\tAny symbol\n\n// https://github.com/igorescobar/jQuery-Mask-Plugin/blob/master/src/jquery.mask.js#L518\n// '0': {pattern: /\\d/},\n// '9': {pattern: /\\d/, optional: true},\n// '#': {pattern: /\\d/, recursive: true},\n// 'A': {pattern: /[a-zA-Z0-9]/},\n// 'S': {pattern: /[a-zA-Z]/}\n\n// https://github.com/the-darc/string-mask\n// 0\tAny numbers\n// 9\tAny numbers (Optional)\n// #\tAny numbers (recursive)\n// A\tAny alphanumeric character\n// a\tAny alphanumeric character (Optional) Not implemented yet\n// S\tAny letter\n// U\tAny letter (All lower case character will be mapped to uppercase)\n// L\tAny letter (All upper case character will be mapped to lowercase)\n// $\tEscape character, used to escape any of the special formatting characters.\n","export default function maskit (value, mask, masked = true, tokens) {\n  value = value || ''\n  mask = mask || ''\n  var iMask = 0\n  var cMask = ''\n  var iValue = 0\n  var output = ''\n  while (iMask < mask.length && iValue < value.length) {\n    cMask = mask[iMask]\n    var masker = tokens[cMask]\n    var cValue = value[iValue]\n    if (masker && !masker.escape) {\n      if (masker.pattern.test(cValue)) {\n        output += masker.transform ? masker.transform(cValue) : cValue\n        iMask++\n      }\n      iValue++\n    } else {\n      if (masker && masker.escape) {\n        iMask++ // take the next mask char and treat it as char\n        cMask = mask[iMask]\n      }\n      if (masked) output += cMask\n      if (cValue === cMask) iValue++ // user typed the same char\n      iMask++\n    }\n  }\n\n  // fix mask that ends with a char: (#)\n  var restOutput = ''\n  while (iMask < mask.length && masked) {\n    cMask = mask[iMask]\n    if (tokens[cMask]) {\n      restOutput = ''\n      break\n    }\n    restOutput += cMask\n    iMask++\n  }\n\n  return output + restOutput\n}\n","import maskit from './maskit'\nimport dynamicMask from './dynamic-mask'\n// Facade to maskit/dynamicMask when mask is String or Array\nexport default function (value, mask, masked = true, tokens) {\n  return Array.isArray(mask)\n         ? dynamicMask(maskit, mask, tokens)(value, mask, masked, tokens)\n         : maskit(value, mask, masked, tokens)\n}\n","export default function dynamicMask (maskit, masks, tokens) {\n  masks = masks.sort((a, b) => a.length - b.length)\n  return function (value, mask, masked = true) {\n    var i = 0\n    while (i < masks.length) {\n      var currentMask = masks[i]\n      i++\n      var nextMask = masks[i]\n      if (! (nextMask && maskit(value, nextMask, true, tokens).length > currentMask.length) ) {\n        return maskit(value, currentMask, masked, tokens)\n      }\n    }\n    return '' // empty masks\n  }\n}\n","import masker from './masker'\nimport tokens from './tokens'\n\n// https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events#The_old-fashioned_way\nfunction event (name) {\n  return new Event(name);\n}\n\nlet didUpdate;\nexport default function (el, binding) {\n  var config = binding.value\n  if (Array.isArray(config) || typeof config === 'string') {\n    config = {\n      mask: config,\n      tokens: tokens\n    }\n  }\n\n  if (el.tagName.toLocaleUpperCase() !== 'INPUT') {\n    el = el.querySelector('input:not([type=hidden])')\n    if (!el) {\n      throw new Error(\"v-mask directive requires an input\")\n    }\n  }\n\n  el.oninput = function (evt) {\n    if (!evt.isTrusted) return // avoid infinite loop\n    /* other properties to try to diferentiate InputEvent of Event (custom)\n    InputEvent (native)\n      cancelable: false\n      isTrusted: true\n\n      composed: true\n      isComposing: false\n      which: 0\n\n    Event (custom)\n      cancelable: true\n      isTrusted: false\n    */\n\n    try {\n      if (['deleteContentBackward', 'deleteContentForward'].includes(evt.inputType)) return\n      // by default, keep cursor at same position as before the mask\n      var position = el.selectionEnd\n      // save the character just inserted\n      var digit = el.value[position-1]\n      el.value = masker(el.value, config.mask, true, config.tokens)\n      // if the digit was changed, increment position until find the digit again\n      while (position < el.value.length && el.value.charAt(position-1) !== digit) {\n        position++\n      }\n      if (el === document.activeElement) {\n        el.setSelectionRange(position, position)\n        setTimeout(function () {\n          el.setSelectionRange(position, position)\n        }, 0)\n      }\n    } finally {\n      el.dispatchEvent(event('input'))\n    }\n    \n  }\n\n  if (didUpdate) return;\n\n  didUpdate = true;\n\n  var newDisplay = masker(el.value, config.mask, true, config.tokens)\n  if (newDisplay !== el.value) {\n    el.value = newDisplay\n    el.dispatchEvent(event('input'))\n  }\n}\n","function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\nexport default normalizeComponent;\n//# sourceMappingURL=normalize-component.mjs.map\n","<template>\n<div>\nasdsadas\n  <input type=\"text\" v-mask=\"config\" :value=\"display\" @input=\"onInput\" />\n</div>\n</template>\n\n<script>\nimport mask from './directive'\nimport tokens from './tokens'\nimport masker from './masker'\n\nexport default {\n  name: 'TheMask',\n  props: {\n    value: [String, Number],\n    mask: {\n      type: [String, Array],\n      required: true\n    },\n    masked: { // by default emits the value unformatted, change to true to format with the mask\n      type: Boolean,\n      default: false // raw\n    },\n    tokens: {\n      type: Object,\n      default: () => tokens\n    }\n  },\n  directives: {mask},\n  data () {\n    return {\n      lastValue: null, // avoid unecessary emit when has no change\n      display: this.value\n    }\n  },\n  watch : {\n    value (newValue) {\n      if (newValue !== this.lastValue) {\n        this.display = newValue\n      }\n    },\n    masked () {\n      this.refresh(this.display)\n    }\n  },\n  computed: {\n    config () {\n      return {\n        mask: this.mask,\n        tokens: this.tokens,\n        masked: this.masked\n      }\n    }\n  },\n  methods: {\n    onInput (e) {\n      if (e.isTrusted) return // ignore native event\n      this.refresh(e.target.value)\n    },\n\n    refresh (value) {\n      this.display = value\n      value = masker(value, this.mask, this.masked, this.tokens)\n      if (value !== this.lastValue) {\n        this.lastValue = value\n        this.$emit('input', value)\n      }\n    }\n  }\n}\n</script>\n","import tokens from './tokens'\nimport mask from './directive'\nimport TheMask from './component.vue'\n\nfunction install(Vue) {\n  Vue.component(TheMask.name, TheMask)\n  Vue.directive('mask', mask)\n}\n\nexport default install\nexport { TheMask, mask, tokens }\n\n// Install by default if included from script tag\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(install)\n}\n"],"names":["tokens","#","pattern","X","S","A","transform","v","toLocaleUpperCase","a","toLocaleLowerCase","!","escape","maskit","value","mask","masked","iMask","cMask","iValue","output","length","masker","cValue","test","restOutput","Array","isArray","masks","sort","b","i","currentMask","nextMask","dynamicMask","event","name","Event","didUpdate","el","binding","config","tagName","querySelector","Error","oninput","evt","isTrusted","includes","inputType","position","selectionEnd","digit","charAt","document","activeElement","setSelectionRange","setTimeout","dispatchEvent","newDisplay","normalizeComponent","template","style","script","scopeId","isFunctionalTemplate","moduleIdentifier","shadowMode","createInjector","createInjectorSSR","createInjectorShadow","options","hook","render","staticRenderFns","_compiled","functional","_scopeId","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","originalRender","h","existing","beforeCreate","concat","props","String","Number","type","required","Boolean","default","Object","directives","data","lastValue","display","watch","newValue","refresh","computed","methods","onInput","e","target","$emit","install","Vue","component","TheMask","directive","window","use"],"mappings":";;;;;qPAAe,IAAAA,EAAA,CACbC,IAAK,CAAEC,QAAS,MAChBC,EAAG,CAAED,QAAS,eACdE,EAAG,CAAEF,QAAS,YACdG,EAAG,CAAEH,QAAS,WAAYI,UAAWC,GAAKA,EAAEC,qBAC5CC,EAAG,CAAEP,QAAS,WAAYI,UAAWC,GAAKA,EAAEG,qBAC5CC,IAAK,CAAEC,QAAQ,ICNF,SAASC,EAAQC,EAAOC,EAAMC,GAAS,EAAMhB,GAC1Dc,EAAQA,GAAS,GACjBC,EAAOA,GAAQ,GAKf,IAJA,IAAIE,EAAQ,EACRC,EAAQ,GACRC,EAAS,EACTC,EAAS,GACNH,EAAQF,EAAKM,QAAUF,EAASL,EAAMO,QAAQ,CAEnD,IAAIC,EAAStB,EADbkB,EAAQH,EAAKE,IAETM,EAAST,EAAMK,GACfG,IAAWA,EAAOV,QAChBU,EAAOpB,QAAQsB,KAAKD,KACtBH,GAAUE,EAAOhB,UAAYgB,EAAOhB,UAAUiB,GAAUA,EACxDN,KAEFE,MAEIG,GAAUA,EAAOV,SAEnBM,EAAQH,IADRE,IAGED,IAAQI,GAAUF,GAClBK,IAAWL,GAAOC,IACtBF,KAMJ,IADA,IAAIQ,EAAa,GACVR,EAAQF,EAAKM,QAAUL,GAAQ,CAEpC,GAAIhB,EADJkB,EAAQH,EAAKE,IACM,CACjBQ,EAAa,GACb,MAEFA,GAAcP,EACdD,IAGF,OAAOG,EAASK,ECrCH,SAAAH,EAAUR,EAAOC,EAAMC,GAAS,EAAMhB,GACnD,OAAO0B,MAAMC,QAAQZ,GCJR,SAAsBF,EAAQe,EAAO5B,GAElD,OADA4B,EAAQA,EAAMC,KAAK,CAACpB,EAAGqB,IAAMrB,EAAEY,OAASS,EAAET,QACnC,SAAUP,EAAOC,EAAMC,GAAS,GAErC,IADA,IAAIe,EAAI,EACDA,EAAIH,EAAMP,QAAQ,CACvB,IAAIW,EAAcJ,EAAMG,GACxBA,IACA,IAAIE,EAAWL,EAAMG,GACrB,KAAOE,GAAYpB,EAAOC,EAAOmB,GAAU,EAAMjC,GAAQqB,OAASW,EAAYX,QAC5E,OAAOR,EAAOC,EAAOkB,EAAahB,EAAQhB,GAG9C,MAAO,IDPAkC,CAAYrB,EAAQE,EAAMf,EAA1BkC,CAAkCpB,EAAOC,EAAMC,EAAQhB,GACvDa,EAAOC,EAAOC,EAAMC,EAAQhB,GEFvC,SAASmC,EAAOC,GACd,OAAO,IAAIC,MAAMD,GAGnB,IAAIE,EACW,SAAAvB,EAAUwB,EAAIC,GAC3B,IAAIC,EAASD,EAAQ1B,MAQrB,IAPIY,MAAMC,QAAQc,IAA6B,iBAAXA,KAClCA,EAAS,CACP1B,KAAM0B,EACNzC,OAAQA,IAI2B,UAAnCuC,EAAGG,QAAQlC,uBACb+B,EAAKA,EAAGI,cAAc,6BAEpB,MAAM,IAAIC,MAAM,sCA2CpB,GAvCAL,EAAGM,QAAU,SAAUC,GACrB,GAAKA,EAAIC,UAeT,IACE,GAAI,CAAC,wBAAyB,wBAAwBC,SAASF,EAAIG,WAAY,OAE/E,IAAIC,EAAWX,EAAGY,aAEdC,EAAQb,EAAGzB,MAAMoC,EAAS,GAG9B,IAFAX,EAAGzB,MAAQQ,EAAOiB,EAAGzB,MAAO2B,EAAO1B,MAAM,EAAM0B,EAAOzC,QAE/CkD,EAAWX,EAAGzB,MAAMO,QAAUkB,EAAGzB,MAAMuC,OAAOH,EAAS,KAAOE,GACnEF,IAEEX,IAAOe,SAASC,gBAClBhB,EAAGiB,kBAAkBN,EAAUA,GAC/BO,YAAW,WACTlB,EAAGiB,kBAAkBN,EAAUA,KAC9B,IAEG,QACRX,EAAGmB,cAAcvB,EAAM,aAKvBG,EAAJ,CAEAA,GAAY,EAEZ,IAAIqB,EAAarC,EAAOiB,EAAGzB,MAAO2B,EAAO1B,MAAM,EAAM0B,EAAOzC,QACxD2D,IAAepB,EAAGzB,QACpByB,EAAGzB,MAAQ6C,EACXpB,EAAGmB,cAAcvB,EAAM,YCvE3B,SAASyB,EAAmBC,EAAUC,EAAOC,EAAQC,EAASC,EAAsBC,EAAoCC,EAAYC,EAAgBC,EAAmBC,GACzI,kBAAfH,IACPE,EAAoBD,EACpBA,EAAiBD,EACjBA,GAAa,GAGjB,MAAMI,EAA4B,mBAAXR,EAAwBA,EAAOQ,QAAUR,EAehE,IAAIS,EAmCJ,GAhDIX,GAAYA,EAASY,SACrBF,EAAQE,OAASZ,EAASY,OAC1BF,EAAQG,gBAAkBb,EAASa,gBACnCH,EAAQI,WAAY,EAEhBV,IACAM,EAAQK,YAAa,IAIzBZ,IACAO,EAAQM,SAAWb,GAGnBE,GAEAM,EAAO,SAAUM,IAEbA,EACIA,GACKC,KAAKC,QAAUD,KAAKC,OAAOC,YAC3BF,KAAKG,QAAUH,KAAKG,OAAOF,QAAUD,KAAKG,OAAOF,OAAOC,aAElB,oBAAxBE,sBACnBL,EAAUK,qBAGVrB,GACAA,EAAMsB,KAAKL,KAAMV,EAAkBS,IAGnCA,GAAWA,EAAQO,uBACnBP,EAAQO,sBAAsBC,IAAIpB,IAK1CK,EAAQgB,aAAef,GAElBV,IACLU,EAAOL,EACD,SAAUW,GACRhB,EAAMsB,KAAKL,KAAMT,EAAqBQ,EAASC,KAAKS,MAAMC,SAASC,cAErE,SAAUZ,GACRhB,EAAMsB,KAAKL,KAAMX,EAAeU,MAGxCN,EACA,GAAID,EAAQK,WAAY,CAEpB,MAAMe,EAAiBpB,EAAQE,OAC/BF,EAAQE,OAAS,SAAkCmB,EAAGd,GAElD,OADAN,EAAKY,KAAKN,GACHa,EAAeC,EAAGd,QAG5B,CAED,MAAMe,EAAWtB,EAAQuB,aACzBvB,EAAQuB,aAAeD,EAAW,GAAGE,OAAOF,EAAUrB,GAAQ,CAACA,GAGvE,OAAOT,6TC5DX,CACA3B,KAAA,UACA4D,MAAA,CACAlF,MAAA,CAAAmF,OAAAC,QACAnF,KAAA,CACAoF,KAAA,CAAAF,OAAAvE,OACA0E,UAAA,GAEApF,OAAA,CACAmF,KAAAE,QACAC,SAAA,GAEAtG,OAAA,CACAmG,KAAAI,OACAD,QAAA,IAAAtG,IAGAwG,WAAA,CAAAzF,KAAAA,GACA0F,OACA,MAAA,CACAC,UAAA,KACAC,QAAA5B,KAAAjE,QAGA8F,MAAA,CACA9F,MAAA+F,GACAA,IAAA9B,KAAA2B,YACA3B,KAAA4B,QAAAE,IAGA7F,SACA+D,KAAA+B,QAAA/B,KAAA4B,WAGAI,SAAA,CACAtE,SACA,MAAA,CACA1B,KAAAgE,KAAAhE,KACAf,OAAA+E,KAAA/E,OACAgB,OAAA+D,KAAA/D,UAIAgG,QAAA,CACAC,QAAAC,GACAA,EAAAnE,WACAgC,KAAA+B,QAAAI,EAAAC,OAAArG,QAGAgG,QAAAhG,GACAiE,KAAA4B,QAAA7F,GACAA,EAAAQ,EAAAR,EAAAiE,KAAAhE,KAAAgE,KAAA/D,OAAA+D,KAAA/E,WACA+E,KAAA2B,YACA3B,KAAA2B,UAAA5F,EACAiE,KAAAqC,MAAA,QAAAtG,iDC9DA,SAASuG,EAAQC,GACfA,EAAIC,UAAUC,EAAQpF,KAAMoF,GAC5BF,EAAIG,UAAU,OAAQ1G,GAOF,oBAAX2G,QAA0BA,OAAOJ,KAC1CI,OAAOJ,IAAIK,IAAIN"}